[package]
name = "pool-manager"
version = "0.1.0"
authors = [
  "0xFable <0xfable@protonmail.com>",
  "kaimen-sano <kaimen_sano@protonmail.com>",
]
edition.workspace = true
description = "The Pool Manager is a contract that allows to manage multiple pools in a single contract."
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
publish.workspace = true

exclude = [
  # Those files are rust-optimizer artifacts. You might want to commit them for convenience but they should not be part of the source code publication.
  "contract.wasm",
  "hash.txt",
]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
# for quicker tests, cargo test --lib
# for more explicit tests, cargo test --features=backtraces
backtraces = ["cosmwasm-std/backtraces"]
injective = ["white-whale-std/injective"]
token_factory = ["white-whale-std/token_factory"]
osmosis = ["osmosis_token_factory"]
osmosis_token_factory = ["white-whale-std/osmosis_token_factory"]

# use library feature to disable all instantiate/execute/query exports
library = []

[dependencies]
cosmwasm-schema.workspace = true
cosmwasm-std.workspace = true
cw-storage-plus.workspace = true
cw2.workspace = true
cw20.workspace = true
cw20-base.workspace = true
serde.workspace = true
white-whale-std.workspace = true
thiserror.workspace = true
cw-utils.workspace = true
cw-ownable.workspace = true
sha2.workspace = true
semver.workspace = true
cw-migrate-error-derive.workspace = true

[dev-dependencies]
cw-multi-test.workspace = true
anyhow.workspace = true
test-case.workspace = true
whale-lair.workspace = true
incentive-manager.workspace = true
epoch-manager.workspace = true
white-whale-testing.workspace = true
bonding-manager.workspace = true
proptest = "1.0.0"
rand = "0.8.4"
stable-swap-sim = { path = "./sim", version = "^0.1" }
